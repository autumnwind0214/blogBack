spring:
  application:
    name: server-gateway
    ip: 127.0.0.1:8848
    username: nacos
    password: nacos
    namespace: a49efd87-e55a-418f-b152-a478570c6f28
  profiles:
    active: dev
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      # 注册中心
      discovery:
        username: ${spring.application.username}
        password: ${spring.application.password}
        namespace: ${spring.application.namespace}
        server-addr: ${spring.application.ip}
      # 配置中心
      config:
        username: ${spring.application.username}
        password: ${spring.application.password}
        namespace: ${spring.application.namespace}
        server-addr: ${spring.application.ip}
        prefix: ${spring.application.name}
        file-extension: yaml
#    openfeign:
#      lazy-attributes-resolution: true
#      client:
#        config:
#          default:
#            connectTimeout: 30000
#            readTimeout: 30000
#            loggerLevel: basic
#      gateway:
#        default-filters:
#          # 令牌中继
#          - TokenRelay=
#          - StripPrefix=1
#        discovery:
#          locator:
#            enabled: true
#        routes:
#          # web 接口
#          - id: web-back
#            uri: lb://web-back
#            predicates:
#              - Path=/back-api/**
#          - id: server-auth
#            uri: lb://server-auth
#            predicates:
#              - Path=/auth-api/**
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://127.0.0.1:8000
      client:
        provider:
          # 认证服务器信息
          oauth-server:
            # 授权地址
            issuer-uri: http://127.0.0.1:8000
            authorization-uri: ${spring.security.oauth2.client.provider.oauth-server.issuer-uri}/oauth2/authorize
            # 令牌获取地址
            token-uri: ${spring.security.oauth2.client.provider.oauth-server.issuer-uri}/oauth2/token
            # 获取用户信息
            user-info-uri: ${spring.security.oauth2.client.provider.oauth-server.issuer-uri}/user
        registration:
          messaging-client-oidc:
            # 认证提供者，标识由哪个认证服务器进行认证，和上面的oauth-server进行关联
            provider: oauth-server
            # 客户端名称
            client-name: gateway
            # 客户端id，从认证平台申请的客户端id
            client-id: messaging-client
            # 客户端密钥
            client-secret: 123456
            # 客户端认证方式
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            # 回调地址，接收认证服务器回传code的接口地址
            redirect-uri: http://127.0.0.1:9000/login/oauth2/code/messaging-client-oidc
            scope:
              - profile
              - openid
logging:
  level:
    org.springframework.security: debug
    org.springframework.security.oauth2: debug